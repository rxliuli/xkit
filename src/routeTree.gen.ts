/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as InteractionCircleRouteImport } from './routes/interaction-circle'
import { Route as FamilyTreeRouteImport } from './routes/family-tree'
import { Route as IndexRouteImport } from './routes/index'

const InteractionCircleRoute = InteractionCircleRouteImport.update({
  id: '/interaction-circle',
  path: '/interaction-circle',
  getParentRoute: () => rootRouteImport,
} as any)
const FamilyTreeRoute = FamilyTreeRouteImport.update({
  id: '/family-tree',
  path: '/family-tree',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/family-tree': typeof FamilyTreeRoute
  '/interaction-circle': typeof InteractionCircleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/family-tree': typeof FamilyTreeRoute
  '/interaction-circle': typeof InteractionCircleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/family-tree': typeof FamilyTreeRoute
  '/interaction-circle': typeof InteractionCircleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/family-tree' | '/interaction-circle'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/family-tree' | '/interaction-circle'
  id: '__root__' | '/' | '/family-tree' | '/interaction-circle'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FamilyTreeRoute: typeof FamilyTreeRoute
  InteractionCircleRoute: typeof InteractionCircleRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/interaction-circle': {
      id: '/interaction-circle'
      path: '/interaction-circle'
      fullPath: '/interaction-circle'
      preLoaderRoute: typeof InteractionCircleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/family-tree': {
      id: '/family-tree'
      path: '/family-tree'
      fullPath: '/family-tree'
      preLoaderRoute: typeof FamilyTreeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FamilyTreeRoute: FamilyTreeRoute,
  InteractionCircleRoute: InteractionCircleRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
