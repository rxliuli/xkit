/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as Char123LangChar125RouteImport } from './routes/{-$lang}'
import { Route as Char123LangChar125IndexRouteImport } from './routes/{-$lang}/index'
import { Route as Char123LangChar125InteractionCircleRouteImport } from './routes/{-$lang}/interaction-circle'
import { Route as Char123LangChar125FamilyTreeRouteImport } from './routes/{-$lang}/family-tree'

const Char123LangChar125Route = Char123LangChar125RouteImport.update({
  id: '/{-$lang}',
  path: '/{-$lang}',
  getParentRoute: () => rootRouteImport,
} as any)
const Char123LangChar125IndexRoute = Char123LangChar125IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => Char123LangChar125Route,
} as any)
const Char123LangChar125InteractionCircleRoute =
  Char123LangChar125InteractionCircleRouteImport.update({
    id: '/interaction-circle',
    path: '/interaction-circle',
    getParentRoute: () => Char123LangChar125Route,
  } as any)
const Char123LangChar125FamilyTreeRoute =
  Char123LangChar125FamilyTreeRouteImport.update({
    id: '/family-tree',
    path: '/family-tree',
    getParentRoute: () => Char123LangChar125Route,
  } as any)

export interface FileRoutesByFullPath {
  '/{-$lang}': typeof Char123LangChar125RouteWithChildren
  '/{-$lang}/family-tree': typeof Char123LangChar125FamilyTreeRoute
  '/{-$lang}/interaction-circle': typeof Char123LangChar125InteractionCircleRoute
  '/{-$lang}/': typeof Char123LangChar125IndexRoute
}
export interface FileRoutesByTo {
  '/{-$lang}/family-tree': typeof Char123LangChar125FamilyTreeRoute
  '/{-$lang}/interaction-circle': typeof Char123LangChar125InteractionCircleRoute
  '/{-$lang}': typeof Char123LangChar125IndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/{-$lang}': typeof Char123LangChar125RouteWithChildren
  '/{-$lang}/family-tree': typeof Char123LangChar125FamilyTreeRoute
  '/{-$lang}/interaction-circle': typeof Char123LangChar125InteractionCircleRoute
  '/{-$lang}/': typeof Char123LangChar125IndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/{-$lang}'
    | '/{-$lang}/family-tree'
    | '/{-$lang}/interaction-circle'
    | '/{-$lang}/'
  fileRoutesByTo: FileRoutesByTo
  to: '/{-$lang}/family-tree' | '/{-$lang}/interaction-circle' | '/{-$lang}'
  id:
    | '__root__'
    | '/{-$lang}'
    | '/{-$lang}/family-tree'
    | '/{-$lang}/interaction-circle'
    | '/{-$lang}/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  Char123LangChar125Route: typeof Char123LangChar125RouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/{-$lang}': {
      id: '/{-$lang}'
      path: '/{-$lang}'
      fullPath: '/{-$lang}'
      preLoaderRoute: typeof Char123LangChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/{-$lang}/': {
      id: '/{-$lang}/'
      path: '/'
      fullPath: '/{-$lang}/'
      preLoaderRoute: typeof Char123LangChar125IndexRouteImport
      parentRoute: typeof Char123LangChar125Route
    }
    '/{-$lang}/interaction-circle': {
      id: '/{-$lang}/interaction-circle'
      path: '/interaction-circle'
      fullPath: '/{-$lang}/interaction-circle'
      preLoaderRoute: typeof Char123LangChar125InteractionCircleRouteImport
      parentRoute: typeof Char123LangChar125Route
    }
    '/{-$lang}/family-tree': {
      id: '/{-$lang}/family-tree'
      path: '/family-tree'
      fullPath: '/{-$lang}/family-tree'
      preLoaderRoute: typeof Char123LangChar125FamilyTreeRouteImport
      parentRoute: typeof Char123LangChar125Route
    }
  }
}

interface Char123LangChar125RouteChildren {
  Char123LangChar125FamilyTreeRoute: typeof Char123LangChar125FamilyTreeRoute
  Char123LangChar125InteractionCircleRoute: typeof Char123LangChar125InteractionCircleRoute
  Char123LangChar125IndexRoute: typeof Char123LangChar125IndexRoute
}

const Char123LangChar125RouteChildren: Char123LangChar125RouteChildren = {
  Char123LangChar125FamilyTreeRoute: Char123LangChar125FamilyTreeRoute,
  Char123LangChar125InteractionCircleRoute:
    Char123LangChar125InteractionCircleRoute,
  Char123LangChar125IndexRoute: Char123LangChar125IndexRoute,
}

const Char123LangChar125RouteWithChildren =
  Char123LangChar125Route._addFileChildren(Char123LangChar125RouteChildren)

const rootRouteChildren: RootRouteChildren = {
  Char123LangChar125Route: Char123LangChar125RouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
