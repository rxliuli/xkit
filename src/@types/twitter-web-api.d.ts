declare const contentEntryTypeEnum: {
  readonly TimelineTimelineItem: 'TimelineTimelineItem'
  readonly TimelineTimelineCursor: 'TimelineTimelineCursor'
  readonly TimelineTimelineModule: 'TimelineTimelineModule'
}
export type ContentEntryTypeEnum = (typeof contentEntryTypeEnum)[keyof typeof contentEntryTypeEnum]
export type ContentEntryType = ContentEntryTypeEnum
declare const cursorTypeEnum: {
  readonly Top: 'Top'
  readonly Bottom: 'Bottom'
  readonly ShowMore: 'ShowMore'
  readonly ShowMoreThreads: 'ShowMoreThreads'
  readonly Gap: 'Gap'
  readonly ShowMoreThreadsPrompt: 'ShowMoreThreadsPrompt'
}
export type CursorTypeEnum = (typeof cursorTypeEnum)[keyof typeof cursorTypeEnum]
export type CursorType = CursorTypeEnum
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type DisplayTreatment = {
  /**
   * @type string
   */
  actionText: string
  /**
   * @type string | undefined
   */
  labelText?: string
}
declare const typeNameEnum: {
  readonly TimelineTweet: 'TimelineTweet'
  readonly TimelineTweetList: 'TimelineTweetList'
  readonly TimelineTimelineItem: 'TimelineTimelineItem'
  readonly TimelineUser: 'TimelineUser'
  readonly TimelineTimelineCursor: 'TimelineTimelineCursor'
  readonly TweetWithVisibilityResults: 'TweetWithVisibilityResults'
  readonly ContextualTweetInterstitial: 'ContextualTweetInterstitial'
  readonly TimelineTimelineModule: 'TimelineTimelineModule'
  readonly TweetTombstone: 'TweetTombstone'
  readonly TimelinePrompt: 'TimelinePrompt'
  readonly TimelineMessagePrompt: 'TimelineMessagePrompt'
  readonly TimelineCommunity: 'TimelineCommunity'
  readonly TimelineTombstone: 'TimelineTombstone'
  readonly TimelineTrend: 'TimelineTrend'
  readonly TimelineNotification: 'TimelineNotification'
  readonly TimelineNotificationAggregateUserActions: 'TimelineNotificationAggregateUserActions'
  readonly TweetUnavailable: 'TweetUnavailable'
  readonly TweetPreviewDisplay: 'TweetPreviewDisplay'
  readonly Tweet: 'Tweet'
  readonly User: 'User'
  readonly UserUnavailable: 'UserUnavailable'
  readonly Community: 'Community'
  readonly CommunityDeleteActionUnavailable: 'CommunityDeleteActionUnavailable'
  readonly CommunityJoinAction: 'CommunityJoinAction'
  readonly CommunityJoinActionUnavailable: 'CommunityJoinActionUnavailable'
  readonly CommunityLeaveActionUnavailable: 'CommunityLeaveActionUnavailable'
  readonly CommunityTweetPinActionUnavailable: 'CommunityTweetPinActionUnavailable'
  readonly CommunityTweetUnpinActionUnavailable: 'CommunityTweetUnpinActionUnavailable'
  readonly CommunityInvitesUnavailable: 'CommunityInvitesUnavailable'
  readonly CommunityJoinRequestsUnavailable: 'CommunityJoinRequestsUnavailable'
  readonly ApiImage: 'ApiImage'
  readonly CommunityQueryResult: 'CommunityQueryResult'
  readonly ApiMedia: 'ApiMedia'
  readonly CommunityHashtagSlice: 'CommunityHashtagSlice'
}
export type TypeNameEnum = (typeof typeNameEnum)[keyof typeof typeNameEnum]
export type TypeName = TypeNameEnum
export type TimelineTimelineCursor = {
  /**
   * @type string
   */
  __typename: TypeName
  /**
   * @type string
   */
  cursorType: CursorType
  /**
   * @type object | undefined
   */
  displayTreatment?: DisplayTreatment
  /**
   * @type string | undefined
   */
  entryType?: ContentEntryType
  /**
   * @type string | undefined
   */
  itemType?: ContentEntryType
  /**
   * @type boolean | undefined
   */
  stopOnEmptyResponse?: boolean
  /**
   * @type string
   */
  value: string
}
export type TimelineCommunity = {
  /**
   * @type string | undefined
   */
  __typename?: TypeName
  [key: string]: any
}
export type TimelineMessagePrompt = {
  /**
   * @type string | undefined
   */
  __typename?: TypeName
  [key: string]: any
}
declare const contentItemTypeEnum: {
  readonly TimelineTwitterList: 'TimelineTwitterList'
  readonly TimelineTweet: 'TimelineTweet'
  readonly TimelineTimelineCursor: 'TimelineTimelineCursor'
  readonly TimelineUser: 'TimelineUser'
  readonly TimelinePrompt: 'TimelinePrompt'
  readonly TimelineMessagePrompt: 'TimelineMessagePrompt'
  readonly TimelineCommunity: 'TimelineCommunity'
  readonly TimelineTombstone: 'TimelineTombstone'
  readonly TimelineTrend: 'TimelineTrend'
  readonly TimelineNotification: 'TimelineNotification'
}
export type ContentItemTypeEnum = (typeof contentItemTypeEnum)[keyof typeof contentItemTypeEnum]
export type ContentItemType = ContentItemTypeEnum
export type NotificationTemplate = {
  /**
   * @type string | undefined
   */
  __typename?: TypeName
  /**
   * @type array | undefined
   */
  from_users?: object[]
  /**
   * @type array | undefined
   */
  target_objects?: object[]
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type RichMessage = {
  /**
   * @type boolean | undefined
   */
  rtl?: boolean
  /**
   * @type string | undefined
   */
  text?: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type UrtEndpointRequestParams = {
  /**
   * @type string
   */
  key: string
  /**
   * @type string
   */
  value: string
}
export type UrtEndpointOptions = {
  /**
   * @type array | undefined
   */
  requestParams?: UrtEndpointRequestParams[]
  /**
   * @type string
   */
  title: string
}
declare const socialContextLandingUrlUrlTypeEnum: {
  readonly DeepLink: 'DeepLink'
  readonly UrtEndpoint: 'UrtEndpoint'
  readonly ExternalUrl: 'ExternalUrl'
}
export type SocialContextLandingUrlUrlTypeEnum =
  (typeof socialContextLandingUrlUrlTypeEnum)[keyof typeof socialContextLandingUrlUrlTypeEnum]
export type SocialContextLandingUrl = {
  /**
   * @type string | undefined
   */
  url?: string
  /**
   * @type string | undefined
   */
  urlType?: SocialContextLandingUrlUrlTypeEnum
  /**
   * @type object | undefined
   */
  urtEndpointOptions?: UrtEndpointOptions
}
export type TimelineNotification = {
  /**
   * @type string
   */
  __typename: TypeName
  /**
   * @type string
   */
  id: string
  /**
   * @type string
   */
  itemType: ContentItemType
  /**
   * @type string
   */
  notification_icon: string
  /**
   * @type object
   */
  notification_url: SocialContextLandingUrl
  /**
   * @type object
   */
  rich_message: RichMessage
  /**
   * @type object
   */
  template: NotificationTemplate
  /**
   * @type string
   */
  timestamp_ms: string
}
export type TimelinePrompt = {
  /**
   * @type string | undefined
   */
  __typename?: TypeName
  [key: string]: any
}
declare const tombstoneRefTypeEnum: {
  readonly TimelineUrl: 'TimelineUrl'
}
export type TombstoneRefTypeEnum = (typeof tombstoneRefTypeEnum)[keyof typeof tombstoneRefTypeEnum]
declare const tombstoneRefUrlTypeEnum: {
  readonly ExternalUrl: 'ExternalUrl'
}
export type TombstoneRefUrlTypeEnum = (typeof tombstoneRefUrlTypeEnum)[keyof typeof tombstoneRefUrlTypeEnum]
export type TombstoneRef = {
  /**
   * @type string | undefined
   */
  type?: TombstoneRefTypeEnum
  /**
   * @type string | undefined, uri
   */
  url?: string
  /**
   * @type string | undefined
   */
  urlType?: TombstoneRefUrlTypeEnum
}
export type TombstoneEntity = {
  /**
   * @type integer | undefined
   */
  fromIndex?: number
  /**
   * @type object | undefined
   */
  ref?: TombstoneRef
  /**
   * @type integer | undefined
   */
  toIndex?: number
}
export type TombstoneRichText = {
  /**
   * @type array | undefined
   */
  entities?: TombstoneEntity[]
  /**
   * @type boolean | undefined
   */
  rtl?: boolean
  /**
   * @type string | undefined
   */
  text?: string
}
export type TombstoneInfo = {
  /**
   * @type object | undefined
   */
  richText?: TombstoneRichText
  /**
   * @type string | undefined
   */
  text?: string
}
declare const timelineTombstoneTombstoneDisplayTypeEnum: {
  readonly Inline: 'Inline'
}
export type TimelineTombstoneTombstoneDisplayTypeEnum =
  (typeof timelineTombstoneTombstoneDisplayTypeEnum)[keyof typeof timelineTombstoneTombstoneDisplayTypeEnum]
export type TimelineTombstone = {
  /**
   * @type string | undefined
   */
  __typename?: TypeName
  /**
   * @type string | undefined
   */
  itemType?: ContentItemType
  /**
   * @type string | undefined
   */
  tombstoneDisplayType?: TimelineTombstoneTombstoneDisplayTypeEnum
  /**
   * @type object | undefined
   */
  tombstoneInfo?: TombstoneInfo
}
declare const socialContextUnionTypeEnum: {
  readonly TimelineGeneralContext: 'TimelineGeneralContext'
  readonly TimelineTopicContext: 'TimelineTopicContext'
}
export type SocialContextUnionTypeEnum = (typeof socialContextUnionTypeEnum)[keyof typeof socialContextUnionTypeEnum]
export type SocialContextUnionType = SocialContextUnionTypeEnum
declare const timelineGeneralContextContextTypeEnum: {
  readonly Follow: 'Follow'
  readonly Pin: 'Pin'
  readonly Like: 'Like'
  readonly Location: 'Location'
  readonly Sparkle: 'Sparkle'
  readonly InboxConversation: 'InboxConversation'
  readonly List: 'List'
  readonly Community: 'Community'
  readonly Facepile: 'Facepile'
}
export type TimelineGeneralContextContextTypeEnum =
  (typeof timelineGeneralContextContextTypeEnum)[keyof typeof timelineGeneralContextContextTypeEnum]
export type TimelineGeneralContext = {
  /**
   * @type array | undefined
   */
  contextImageUrls?: string[]
  /**
   * @type string | undefined
   */
  contextType?: TimelineGeneralContextContextTypeEnum
  /**
   * @type object | undefined
   */
  landingUrl?: SocialContextLandingUrl
  /**
   * @type string | undefined
   */
  text?: string
  /**
   * @type string | undefined
   */
  type?: SocialContextUnionType
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type TopicContext = {
  /**
   * @type string | undefined
   */
  description?: string
  /**
   * @type boolean | undefined
   */
  following?: boolean
  /**
   * @type string | undefined, uri
   */
  icon_url?: string
  /**
   * @type string | undefined
   */
  id?: string
  /**
   * @type string | undefined
   */
  name?: string
  /**
   * @type boolean | undefined
   */
  not_interested?: boolean
  /**
   * @type string | undefined
   */
  topic_id?: string
}
declare const timelineTopicContextFunctionalityTypeEnum: {
  readonly Basic: 'Basic'
}
export type TimelineTopicContextFunctionalityTypeEnum =
  (typeof timelineTopicContextFunctionalityTypeEnum)[keyof typeof timelineTopicContextFunctionalityTypeEnum]
export type TimelineTopicContext = {
  /**
   * @type string | undefined
   */
  functionalityType?: TimelineTopicContextFunctionalityTypeEnum
  /**
   * @type object | undefined
   */
  topic?: TopicContext
  /**
   * @type string | undefined
   */
  type?: SocialContextUnionType
}
export type SocialContextUnion =
  | (TimelineGeneralContext & {
      type: 'TimelineGeneralContext'
    })
  | (TimelineTopicContext & {
      type: 'TimelineTopicContext'
    })
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type ThumbnailImage = {
  /**
   * @type integer | undefined
   */
  original_img_height?: number
  /**
   * @type string | undefined, uri
   */
  original_img_url?: string
  /**
   * @type integer | undefined
   */
  original_img_width?: number
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type TrendImage = {
  /**
   * @type string | undefined, uri
   */
  url?: string
}
export type TrendMetadata = {
  /**
   * @type object | undefined
   */
  url?: SocialContextLandingUrl
}
export type TimelineTrend = {
  /**
   * @type string
   */
  __typename: TypeName
  /**
   * @type array | undefined
   */
  images?: TrendImage[]
  /**
   * @type boolean | undefined
   */
  is_ai_trend?: boolean
  /**
   * @type string | undefined
   */
  itemType?: ContentItemType
  /**
   * @type string
   */
  name: string
  social_context?: SocialContextUnion
  /**
   * @type object | undefined
   */
  thumbnail_image?: ThumbnailImage
  /**
   * @type object
   */
  trend_metadata: TrendMetadata
  /**
   * @type object
   */
  trend_url: SocialContextLandingUrl
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type TextHighlight = {
  /**
   * @type integer
   */
  endIndex: number
  /**
   * @type integer
   */
  startIndex: number
}
type Highlight$1 = {
  /**
   * @type array
   */
  textHighlights: TextHighlight[]
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type ApiImageColorRGB = {
  /**
   * @type integer
   */
  red: number
  /**
   * @type integer
   */
  green: number
  /**
   * @type integer
   */
  blue: number
}
export type ApiImageColorPalette = {
  rgb: ApiImageColorRGB
  /**
   * @type number
   */
  percentage: number
}
export type ApiImageColorInfo = {
  /**
   * @type array
   */
  palette: ApiImageColorPalette[]
}
export type ArticleCoverMediaInfo = {
  /**
   * @type string | undefined
   */
  __typename?: TypeName
  color_info: ApiImageColorInfo
  /**
   * @type integer
   */
  original_img_height: number
  /**
   * @type string, uri
   */
  original_img_url: string
  /**
   * @type integer
   */
  original_img_width: number
}
export type ArticleCoverMedia = {
  /**
   * @type string
   */
  id: string
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  media_id: string
  media_info: ArticleCoverMediaInfo
  /**
   * @type string
   */
  media_key: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type ArticleLifecycleState = {
  /**
   * @type integer
   */
  modified_at_secs: number
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type ArticleMetadata = {
  /**
   * @type integer
   */
  first_published_at_secs: number
}
export type ArticleResult = {
  cover_media: ArticleCoverMedia
  /**
   * @type string
   */
  id: string
  lifecycle_state?: ArticleLifecycleState
  metadata: ArticleMetadata
  /**
   * @type string
   */
  preview_text: string
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  rest_id: string
  /**
   * @type string
   */
  title: string
}
export type ArticleResults = {
  result: ArticleResult
}
export type Article = {
  article_results: ArticleResults
}
declare const communityDeleteActionResultReasonEnum: {
  readonly Unavailable: 'Unavailable'
}
export type CommunityDeleteActionResultReasonEnum =
  (typeof communityDeleteActionResultReasonEnum)[keyof typeof communityDeleteActionResultReasonEnum]
export type CommunityDeleteActionResult = {
  /**
   * @type string
   */
  __typename: TypeName
  /**
   * @type string
   */
  reason: CommunityDeleteActionResultReasonEnum
}
export type CommunityJoinAction = {
  /**
   * @type string
   */
  __typename: TypeName
}
declare const communityJoinActionUnavailableReasonEnum: {
  readonly ViewerRequestRequired: 'ViewerRequestRequired'
}
export type CommunityJoinActionUnavailableReasonEnum =
  (typeof communityJoinActionUnavailableReasonEnum)[keyof typeof communityJoinActionUnavailableReasonEnum]
export type CommunityJoinActionUnavailable = {
  /**
   * @type string
   */
  __typename: TypeName
  /**
   * @type string
   */
  message: string
  /**
   * @type string
   */
  reason: CommunityJoinActionUnavailableReasonEnum
}
export type CommunityJoinActionResultUnion =
  | (CommunityJoinAction & {
      __typename: 'CommunityJoinAction'
    })
  | (CommunityJoinActionUnavailable & {
      __typename: 'CommunityJoinActionUnavailable'
    })
declare const communityLeaveActionResultReasonEnum: {
  readonly ViewerNotMember: 'ViewerNotMember'
}
export type CommunityLeaveActionResultReasonEnum =
  (typeof communityLeaveActionResultReasonEnum)[keyof typeof communityLeaveActionResultReasonEnum]
export type CommunityLeaveActionResult = {
  /**
   * @type string
   */
  __typename: TypeName
  /**
   * @type string
   */
  message: string
  /**
   * @type string
   */
  reason: CommunityLeaveActionResultReasonEnum
}
export type CommunityPinActionResult = {
  /**
   * @type string
   */
  __typename: TypeName
}
export type CommunityUnpinActionResult = {
  /**
   * @type string
   */
  __typename: TypeName
}
export type CommunityActions = {
  delete_action_result?: CommunityDeleteActionResult
  join_action_result?: CommunityJoinActionResultUnion
  leave_action_result?: CommunityLeaveActionResult
  pin_action_result?: CommunityPinActionResult
  unpin_action_result?: CommunityUnpinActionResult
}
declare const communityInvitesResultReasonEnum: {
  readonly Unavailable: 'Unavailable'
}
export type CommunityInvitesResultReasonEnum =
  (typeof communityInvitesResultReasonEnum)[keyof typeof communityInvitesResultReasonEnum]
export type CommunityInvitesResult = {
  /**
   * @type string
   */
  __typename: TypeName
  /**
   * @type string
   */
  message: string
  /**
   * @type string
   */
  reason: CommunityInvitesResultReasonEnum
}
export type CommunityJoinRequestsResult = {
  /**
   * @type string
   */
  __typename: TypeName
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type CommunityRule = {
  /**
   * @type string | undefined
   */
  description?: string
  /**
   * @type string
   */
  name: string
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  rest_id: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type CommunityUrlsPermalink = {
  /**
   * @type string, uri
   */
  url: string
}
export type CommunityUrls = {
  permalink: CommunityUrlsPermalink
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type PrimaryCommunityTopic = {
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  topic_id: string
  /**
   * @type string
   */
  topic_name: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type UserAvatar = {
  /**
   * @type string, uri
   */
  image_url: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
/**
 * @pattern ^(Sun|Mon|Tue|Wed|Thu|Fri|Sat) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (0[1-9]|[12][0-9]|3[01]) (0[0-9]|1[0-9]|2[0-3])(: ?)([0-5][0-9])(: ?)([0-5][0-9]) ([+-][0-9]{4}) ([0-9]{4})$
 * @example Sat Dec 31 23:59:59 +0000 2023
 */
export type TwitterTimeFormat = string
export type UserCore = {
  /**
   * @type string
   */
  created_at: TwitterTimeFormat
  /**
   * @type string
   */
  name: string
  /**
   * @type string
   */
  screen_name: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type UserHighlightsInfo = {
  /**
   * @type boolean
   */
  can_highlight_tweets: boolean
  /**
   * @type string
   */
  highlighted_tweets: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type Url = {
  /**
   * @type string
   */
  display_url: string
  /**
   * @type string | undefined, uri
   */
  expanded_url?: string
  /**
   * @type array
   */
  indices: number[]
  /**
   * @type string, uri
   */
  url: string
}
export type UserEntities = {
  /**
   * @type object | undefined
   */
  description?: {
    /**
     * @type array
     */
    urls: Url[]
  }
  /**
   * @type object | undefined
   */
  url?: {
    /**
     * @type array
     */
    urls: Url[]
  }
  [key: string]: any
}
export type UserLegacy = {
  /**
   * @type boolean | undefined
   */
  blocked_by?: boolean
  /**
   * @type boolean | undefined
   */
  blocking?: boolean
  /**
   * @type boolean | undefined
   */
  can_dm?: boolean
  /**
   * @type boolean | undefined
   */
  can_media_tag?: boolean
  /**
   * @type boolean
   */
  default_profile: boolean
  /**
   * @type boolean
   */
  default_profile_image: boolean
  /**
   * @type string
   */
  description: string
  /**
   * @type object
   */
  entities: UserEntities
  /**
   * @type integer
   */
  fast_followers_count: number
  /**
   * @type integer
   */
  favourites_count: number
  /**
   * @type boolean | undefined
   */
  follow_request_sent?: boolean
  /**
   * @type integer
   */
  followers_count: number
  /**
   * @type integer
   */
  friends_count: number
  /**
   * @type boolean
   */
  has_custom_timelines: boolean
  /**
   * @type boolean
   */
  is_translator: boolean
  /**
   * @type integer
   */
  listed_count: number
  /**
   * @type integer
   */
  media_count: number
  /**
   * @type boolean | undefined
   */
  muting?: boolean
  /**
   * @type integer
   */
  normal_followers_count: number
  /**
   * @type boolean | undefined
   */
  notifications?: boolean
  /**
   * @type array
   */
  pinned_tweet_ids_str: string[]
  /**
   * @type boolean
   */
  possibly_sensitive: boolean
  /**
   * @type object | undefined
   */
  profile_banner_extensions?: object
  /**
   * @type string | undefined, uri
   */
  profile_banner_url?: string
  /**
   * @type object | undefined
   */
  profile_image_extensions?: object
  /**
   * @type string
   */
  profile_interstitial_type: string
  /**
   * @type boolean | undefined
   */
  protected?: boolean
  /**
   * @type integer
   */
  statuses_count: number
  /**
   * @type string
   */
  translator_type: string
  /**
   * @type string | undefined
   */
  url?: string
  /**
   * @type boolean | undefined
   */
  want_retweets?: boolean
  /**
   * @type array | undefined
   */
  withheld_in_countries?: string[]
}
declare const userLegacyExtendedProfileBirthdateVisibilityEnum: {
  readonly Self: 'Self'
  readonly Public: 'Public'
  readonly MutualFollow: 'MutualFollow'
  readonly Followers: 'Followers'
  readonly Following: 'Following'
}
export type UserLegacyExtendedProfileBirthdateVisibilityEnum =
  (typeof userLegacyExtendedProfileBirthdateVisibilityEnum)[keyof typeof userLegacyExtendedProfileBirthdateVisibilityEnum]
declare const userLegacyExtendedProfileBirthdateYearVisibilityEnum: {
  readonly Self: 'Self'
  readonly Public: 'Public'
  readonly MutualFollow: 'MutualFollow'
  readonly Followers: 'Followers'
  readonly Following: 'Following'
}
export type UserLegacyExtendedProfileBirthdateYearVisibilityEnum =
  (typeof userLegacyExtendedProfileBirthdateYearVisibilityEnum)[keyof typeof userLegacyExtendedProfileBirthdateYearVisibilityEnum]
export type UserLegacyExtendedProfileBirthdate = {
  /**
   * @type integer
   */
  day: number
  /**
   * @type integer
   */
  month: number
  /**
   * @type string
   */
  visibility: UserLegacyExtendedProfileBirthdateVisibilityEnum
  /**
   * @type integer | undefined
   */
  year?: number
  /**
   * @type string
   */
  year_visibility: UserLegacyExtendedProfileBirthdateYearVisibilityEnum
}
export type UserLegacyExtendedProfile = {
  birthdate?: UserLegacyExtendedProfileBirthdate
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type UserLocation = {
  /**
   * @type string
   */
  location: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type UserPrivacy = {
  /**
   * @type boolean
   */
  protected: boolean
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type UserProfessionalCategory = {
  /**
   * @type string
   */
  icon_name: string
  /**
   * @type integer
   */
  id: number
  /**
   * @type string
   */
  name: string
}
declare const userProfessionalProfessionalTypeEnum: {
  readonly Business: 'Business'
  readonly Creator: 'Creator'
}
export type UserProfessionalProfessionalTypeEnum =
  (typeof userProfessionalProfessionalTypeEnum)[keyof typeof userProfessionalProfessionalTypeEnum]
export type UserProfessional = {
  /**
   * @type array
   */
  category: UserProfessionalCategory[]
  /**
   * @type string
   */
  professional_type: UserProfessionalProfessionalTypeEnum
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  rest_id: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type UserRelationshipPerspectives = {
  /**
   * @type boolean | undefined
   */
  following?: boolean
  /**
   * @type boolean | undefined
   */
  followed_by?: boolean
  /**
   * @type boolean | undefined
   */
  blocking?: boolean
  /**
   * @type boolean | undefined
   */
  muting?: boolean
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type UserTipJarSettings = {
  /**
   * @type string | undefined
   */
  bandcamp_handle?: string
  /**
   * @type string | undefined
   */
  bitcoin_handle?: string
  /**
   * @type string | undefined
   */
  cash_app_handle?: string
  /**
   * @type string | undefined
   */
  ethereum_handle?: string
  /**
   * @type string | undefined
   */
  gofundme_handle?: string
  /**
   * @type boolean | undefined
   */
  is_enabled?: boolean
  /**
   * @type string | undefined
   */
  patreon_handle?: string
  /**
   * @type string | undefined
   */
  pay_pal_handle?: string
  /**
   * @type string | undefined
   */
  venmo_handle?: string
}
declare const userVerificationVerifiedTypeEnum: {
  readonly Business: 'Business'
  readonly Government: 'Government'
}
export type UserVerificationVerifiedTypeEnum =
  (typeof userVerificationVerifiedTypeEnum)[keyof typeof userVerificationVerifiedTypeEnum]
export type UserVerification = {
  /**
   * @type boolean
   */
  verified: boolean
  /**
   * @description Business https://x.com/Limportant_fr Government https://x.com/realDonaldTrump
   * @type string | undefined
   */
  verified_type?: UserVerificationVerifiedTypeEnum
}
declare const userVerificationInfoReasonDescriptionEntitiesRefUrlTypeEnum: {
  readonly ExternalUrl: 'ExternalUrl'
}
export type UserVerificationInfoReasonDescriptionEntitiesRefUrlTypeEnum =
  (typeof userVerificationInfoReasonDescriptionEntitiesRefUrlTypeEnum)[keyof typeof userVerificationInfoReasonDescriptionEntitiesRefUrlTypeEnum]
export type UserVerificationInfoReasonDescriptionEntitiesRef = {
  /**
   * @type string, uri
   */
  url: string
  /**
   * @type string
   */
  url_type: UserVerificationInfoReasonDescriptionEntitiesRefUrlTypeEnum
}
export type UserVerificationInfoReasonDescriptionEntities = {
  /**
   * @type integer
   */
  from_index: number
  ref: UserVerificationInfoReasonDescriptionEntitiesRef
  /**
   * @type integer
   */
  to_index: number
}
export type UserVerificationInfoReasonDescription = {
  /**
   * @type array
   */
  entities: UserVerificationInfoReasonDescriptionEntities[]
  /**
   * @type string
   */
  text: string
}
export type UserVerificationInfoReason = {
  description: UserVerificationInfoReasonDescription
  /**
   * @type integer | undefined
   */
  override_verified_year?: number
  /**
   * @pattern ^-?[0-9]+$
   * @type string
   */
  verified_since_msec: string
}
export type UserVerificationInfo = {
  /**
   * @type boolean
   */
  is_identity_verified: boolean
  reason?: UserVerificationInfoReason
}
declare const userParodyCommentaryFanLabelEnum: {
  readonly None: 'None'
  readonly Parody: 'Parody'
  readonly Commentary: 'Commentary'
}
export type UserParodyCommentaryFanLabelEnum =
  (typeof userParodyCommentaryFanLabelEnum)[keyof typeof userParodyCommentaryFanLabelEnum]
declare const userProfileImageShapeEnum: {
  readonly Circle: 'Circle'
  readonly Square: 'Square'
  readonly Hexagon: 'Hexagon'
}
export type UserProfileImageShapeEnum = (typeof userProfileImageShapeEnum)[keyof typeof userProfileImageShapeEnum]
export type User = {
  /**
   * @type string
   */
  __typename: TypeName
  core: UserCore
  /**
   * @type object
   */
  avatar: UserAvatar
  /**
   * @type object
   */
  relationship_perspectives: UserRelationshipPerspectives
  /**
   * @type object
   */
  location: UserLocation
  /**
   * @type object
   */
  privacy: UserPrivacy
  /**
   * @type object
   */
  verification: UserVerification
  /**
   * @type object | undefined
   */
  affiliates_highlighted_label?: {
    [key: string]: any
  }
  /**
   * @type object | undefined
   */
  business_account?: {
    [key: string]: any
  }
  /**
   * @type integer | undefined
   */
  creator_subscriptions_count?: number
  /**
   * @type boolean | undefined
   */
  has_graduated_access?: boolean
  /**
   * @type boolean | undefined
   */
  has_hidden_likes_on_profile?: boolean
  /**
   * @type boolean | undefined
   */
  has_hidden_subscriptions_on_profile?: boolean
  /**
   * @type boolean | undefined
   */
  has_nft_avatar?: boolean
  highlights_info?: UserHighlightsInfo
  /**
   * @pattern ^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$
   * @type string
   */
  id: string
  /**
   * @type boolean
   */
  is_blue_verified: boolean
  /**
   * @type boolean | undefined
   */
  is_profile_translatable?: boolean
  legacy: UserLegacy
  legacy_extended_profile?: UserLegacyExtendedProfile
  /**
   * @type string | undefined
   */
  parody_commentary_fan_label?: UserParodyCommentaryFanLabelEnum
  /**
   * @type boolean | undefined
   */
  premium_gifting_eligible?: boolean
  professional?: UserProfessional
  /**
   * @type string
   */
  profile_image_shape: UserProfileImageShapeEnum
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  rest_id: string
  /**
   * @type boolean | undefined
   */
  super_follow_eligible?: boolean
  /**
   * @type boolean | undefined
   */
  super_followed_by?: boolean
  /**
   * @type boolean | undefined
   */
  super_following?: boolean
  tipjar_settings?: UserTipJarSettings
  /**
   * @type integer | undefined
   */
  user_seed_tweet_count?: number
  verification_info?: UserVerificationInfo
}
export type UserUnavailable = {
  /**
   * @type string
   */
  __typename: TypeName
  /**
   * @type string | undefined
   */
  message?: string
  /**
   * @type string
   */
  reason: string
}
export type UserUnion =
  | (User & {
      __typename: 'User'
    })
  | (UserUnavailable & {
      __typename: 'UserUnavailable'
    })
export type UserResults = {
  result?: UserUnion
}
declare const communityDataInvitesPolicyEnum: {
  readonly MemberInvitesAllowed: 'MemberInvitesAllowed'
  readonly ModeratorInvitesAllowed: 'ModeratorInvitesAllowed'
}
export type CommunityDataInvitesPolicyEnum =
  (typeof communityDataInvitesPolicyEnum)[keyof typeof communityDataInvitesPolicyEnum]
declare const communityDataJoinPolicyEnum: {
  readonly Open: 'Open'
  readonly RestrictedJoinRequestsRequireModeratorApproval: 'RestrictedJoinRequestsRequireModeratorApproval'
}
export type CommunityDataJoinPolicyEnum = (typeof communityDataJoinPolicyEnum)[keyof typeof communityDataJoinPolicyEnum]
declare const communityDataRoleEnum: {
  readonly NonMember: 'NonMember'
}
export type CommunityDataRoleEnum = (typeof communityDataRoleEnum)[keyof typeof communityDataRoleEnum]
export type CommunityData = {
  /**
   * @type string
   */
  __typename: TypeName
  actions?: CommunityActions
  admin_results?: UserResults
  /**
   * @type integer | undefined
   */
  created_at?: number
  creator_results?: UserResults
  /**
   * @type object | undefined
   */
  custom_banner_media?: {
    [key: string]: any
  }
  /**
   * @type object | undefined
   */
  default_banner_media?: {
    [key: string]: any
  }
  /**
   * @type string | undefined
   */
  description?: string
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  id_str: string
  /**
   * @type string | undefined
   */
  invites_policy?: CommunityDataInvitesPolicyEnum
  invites_result?: CommunityInvitesResult
  /**
   * @type boolean | undefined
   */
  is_pinned?: boolean
  /**
   * @type string | undefined
   */
  join_policy?: CommunityDataJoinPolicyEnum
  join_requests_result?: CommunityJoinRequestsResult
  /**
   * @type integer | undefined
   */
  member_count?: number
  /**
   * @type array | undefined
   */
  members_facepile_results?: UserResults[]
  /**
   * @type integer | undefined
   */
  moderator_count?: number
  /**
   * @type string | undefined
   */
  name?: string
  primary_community_topic?: PrimaryCommunityTopic
  /**
   * @type string | undefined
   */
  question?: string
  /**
   * @type string | undefined
   */
  role?: CommunityDataRoleEnum
  /**
   * @type array | undefined
   */
  rules?: CommunityRule[]
  /**
   * @type array | undefined
   */
  search_tags?: string[]
  /**
   * @type array | undefined
   */
  show_only_users_to_display?: string[]
  urls?: CommunityUrls
  /**
   * @type object | undefined
   */
  viewer_relationship?: {
    [key: string]: any
  }
}
export type Community = {
  result: CommunityData
}
declare const authorCommunityRelationshipRoleEnum: {
  readonly Member: 'Member'
  readonly Moderator: 'Moderator'
  readonly Admin: 'Admin'
  readonly NonMember: 'NonMember'
}
export type AuthorCommunityRelationshipRoleEnum =
  (typeof authorCommunityRelationshipRoleEnum)[keyof typeof authorCommunityRelationshipRoleEnum]
export type AuthorCommunityRelationship = {
  community_results: Community
  /**
   * @type string | undefined
   */
  role?: AuthorCommunityRelationshipRoleEnum
  user_results?: UserResults
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type BirdwatchPivotCallToAction = {
  /**
   * @type string, uri
   */
  destinationUrl: string
  /**
   * @type string
   */
  prompt: string
  /**
   * @type string
   */
  title: string
}
declare const birdwatchEntityRefTypeEnum: {
  readonly TimelineUrl: 'TimelineUrl'
  readonly TimelineRichTextHashtag: 'TimelineRichTextHashtag'
}
export type BirdwatchEntityRefTypeEnum = (typeof birdwatchEntityRefTypeEnum)[keyof typeof birdwatchEntityRefTypeEnum]
declare const birdwatchEntityRefUrlTypeEnum: {
  readonly ExternalUrl: 'ExternalUrl'
}
export type BirdwatchEntityRefUrlTypeEnum =
  (typeof birdwatchEntityRefUrlTypeEnum)[keyof typeof birdwatchEntityRefUrlTypeEnum]
export type BirdwatchEntityRef = {
  /**
   * @type string | undefined
   */
  text?: string
  /**
   * @type string
   */
  type: BirdwatchEntityRefTypeEnum
  /**
   * @type string | undefined, uri
   */
  url?: string
  /**
   * @type string | undefined
   */
  urlType?: BirdwatchEntityRefUrlTypeEnum
}
export type BirdwatchEntity = {
  /**
   * @type integer
   */
  fromIndex: number
  ref: BirdwatchEntityRef
  /**
   * @type integer
   */
  toIndex: number
}
export type BirdwatchPivotFooter = {
  /**
   * @type array
   */
  entities: BirdwatchEntity[]
  /**
   * @type string
   */
  text: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type BirdwatchPivotNote = {
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  rest_id: string
}
export type BirdwatchPivotSubtitle = {
  /**
   * @type array
   */
  entities: BirdwatchEntity[]
  /**
   * @type string
   */
  text: string
}
declare const birdwatchPivotIconTypeEnum: {
  readonly BirdwatchV1Icon: 'BirdwatchV1Icon'
}
export type BirdwatchPivotIconTypeEnum = (typeof birdwatchPivotIconTypeEnum)[keyof typeof birdwatchPivotIconTypeEnum]
declare const birdwatchPivotVisualStyleEnum: {
  readonly Default: 'Default'
  readonly Tentative: 'Tentative'
}
export type BirdwatchPivotVisualStyleEnum =
  (typeof birdwatchPivotVisualStyleEnum)[keyof typeof birdwatchPivotVisualStyleEnum]
export type BirdwatchPivot = {
  callToAction?: BirdwatchPivotCallToAction
  /**
   * @type string, uri
   */
  destinationUrl: string
  footer?: BirdwatchPivotFooter
  /**
   * @type string
   */
  iconType: BirdwatchPivotIconTypeEnum
  note?: BirdwatchPivotNote
  /**
   * @type string | undefined
   */
  shorttitle?: string
  subtitle?: BirdwatchPivotSubtitle
  /**
   * @type string
   */
  title: string
  /**
   * @type string | undefined
   */
  titleDetail?: string
  /**
   * @type string | undefined
   */
  visualStyle?: BirdwatchPivotVisualStyleEnum
}
export type CommunityRelationship = {
  actions: CommunityActions
  /**
   * @type string
   */
  id: string
  /**
   * @type object
   */
  moderation_state: {
    [key: string]: any
  }
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  rest_id: string
}
export type AnalysisResults = {
  result: Tweet
}
export type GrokShareAttachmentItem = {
  analysis_post_id_results?: AnalysisResults
  /**
   * @type array
   */
  media_urls: string[]
  /**
   * @type string
   */
  message: string
}
export type GrokShareAttachment = {
  /**
   * @type array
   */
  items: GrokShareAttachmentItem[]
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type Hashtag = {
  [key: string]: any
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type AdditionalMediaInfoCallToActionsUrl = {
  /**
   * @type string, uri
   */
  url: string
}
export type AdditionalMediaInfoCallToActions = {
  visit_site?: AdditionalMediaInfoCallToActionsUrl
  watch_now?: AdditionalMediaInfoCallToActionsUrl
}
export type UserResultCore = {
  user_results: UserResults
}
export type AdditionalMediaInfo = {
  call_to_actions?: AdditionalMediaInfoCallToActions
  /**
   * @type string | undefined
   */
  description?: string
  /**
   * @type boolean | undefined
   */
  embeddable?: boolean
  /**
   * @type boolean
   */
  monetizable: boolean
  source_user?: UserResultCore
  /**
   * @type string | undefined
   */
  title?: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type AllowDownloadStatus = {
  /**
   * @type boolean | undefined
   */
  allow_download?: boolean
}
declare const extMediaAvailabilityStatusEnum: {
  readonly Available: 'Available'
  readonly Unavailable: 'Unavailable'
}
export type ExtMediaAvailabilityStatusEnum =
  (typeof extMediaAvailabilityStatusEnum)[keyof typeof extMediaAvailabilityStatusEnum]
export type ExtMediaAvailability = {
  /**
   * @type string | undefined
   */
  reason?: string
  /**
   * @type string | undefined
   */
  status?: ExtMediaAvailabilityStatusEnum
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type MediaOriginalInfoFocusRect = {
  /**
   * @type integer
   */
  h: number
  /**
   * @type integer
   */
  w: number
  /**
   * @type integer
   */
  x: number
  /**
   * @type integer
   */
  y: number
}
export type MediaOriginalInfo = {
  /**
   * @type array | undefined
   */
  focus_rects?: MediaOriginalInfoFocusRect[]
  /**
   * @type integer
   */
  height: number
  /**
   * @type integer
   */
  width: number
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type GrokImageAnnotation = {
  /**
   * @type string
   */
  prompt: string
  /**
   * @type string
   */
  upsampled_prompt: string
}
export type MediaResult = {
  grok_image_annotation?: GrokImageAnnotation
  /**
   * @type string
   */
  media_key: string
}
export type MediaResults = {
  result: MediaResult
}
declare const mediaSizeResizeEnum: {
  readonly crop: 'crop'
  readonly fit: 'fit'
}
export type MediaSizeResizeEnum = (typeof mediaSizeResizeEnum)[keyof typeof mediaSizeResizeEnum]
export type MediaSize = {
  /**
   * @type integer
   */
  h: number
  /**
   * @type string
   */
  resize: MediaSizeResizeEnum
  /**
   * @type integer
   */
  w: number
}
export type MediaSizes = {
  large: MediaSize
  medium: MediaSize
  small: MediaSize
  thumb: MediaSize
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type MediaVideoInfoVariant = {
  /**
   * @type integer | undefined
   */
  bitrate?: number
  /**
   * @type string
   */
  content_type: string
  /**
   * @type string, uri
   */
  url: string
}
export type MediaVideoInfo = {
  /**
   * @type array
   */
  aspect_ratio: number[]
  /**
   * @type integer | undefined
   */
  duration_millis?: number
  /**
   * @type array
   */
  variants: MediaVideoInfoVariant[]
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type SensitiveMediaWarning = {
  /**
   * @type boolean | undefined
   */
  adult_content?: boolean
  /**
   * @type boolean | undefined
   */
  graphic_violence?: boolean
  /**
   * @type boolean | undefined
   */
  other?: boolean
}
declare const mediaTypeEnum: {
  readonly photo: 'photo'
  readonly video: 'video'
  readonly animated_gif: 'animated_gif'
}
export type MediaTypeEnum = (typeof mediaTypeEnum)[keyof typeof mediaTypeEnum]
export type Media = {
  additional_media_info?: AdditionalMediaInfo
  allow_download_status?: AllowDownloadStatus
  /**
   * @type string
   */
  display_url: string
  /**
   * @type string, uri
   */
  expanded_url: string
  /**
   * @type string | undefined
   */
  ext_alt_text?: string
  ext_media_availability: ExtMediaAvailability
  /**
   * @type object | undefined
   */
  features?: object
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  id_str: string
  /**
   * @type array
   */
  indices: number[]
  /**
   * @type string
   */
  media_key: string
  media_results?: MediaResults
  /**
   * @type string, uri
   */
  media_url_https: string
  original_info: MediaOriginalInfo
  sensitive_media_warning?: SensitiveMediaWarning
  sizes: MediaSizes
  /**
   * @pattern ^[0-9]+$
   * @type string | undefined
   */
  source_status_id_str?: string
  /**
   * @pattern ^[0-9]+$
   * @type string | undefined
   */
  source_user_id_str?: string
  /**
   * @type string
   */
  type: MediaTypeEnum
  /**
   * @type string, uri
   */
  url: string
  video_info?: MediaVideoInfo
}
type Symbol$1 = {
  [key: string]: any
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type Timestamp = {
  /**
   * @type array
   */
  indices: number[]
  /**
   * @type integer
   */
  seconds: number
  /**
   * @type string
   */
  text: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type UserMention = {
  [key: string]: any
}
export type Entities = {
  /**
   * @type array
   */
  hashtags: Hashtag[]
  /**
   * @type array | undefined
   */
  media?: Media[]
  /**
   * @type array
   */
  symbols: Symbol$1[]
  /**
   * @type array | undefined
   */
  timestamps?: Timestamp[]
  /**
   * @type array
   */
  urls: Url[]
  /**
   * @type array
   */
  user_mentions: UserMention[]
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type NoteTweetResultMediaInlineMedia = {
  /**
   * @type integer
   */
  index: number
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  media_id: string
}
export type NoteTweetResultMedia = {
  /**
   * @type array
   */
  inline_media: NoteTweetResultMediaInlineMedia[]
}
declare const noteTweetResultRichTextTagRichtextTypesEnum: {
  readonly Bold: 'Bold'
  readonly Italic: 'Italic'
}
export type NoteTweetResultRichTextTagRichtextTypesEnum =
  (typeof noteTweetResultRichTextTagRichtextTypesEnum)[keyof typeof noteTweetResultRichTextTagRichtextTypesEnum]
export type NoteTweetResultRichTextTag = {
  /**
   * @type integer
   */
  from_index: number
  /**
   * @type array
   */
  richtext_types: NoteTweetResultRichTextTagRichtextTypesEnum[]
  /**
   * @type integer
   */
  to_index: number
}
export type NoteTweetResultRichText = {
  /**
   * @type array
   */
  richtext_tags: NoteTweetResultRichTextTag[]
}
export type NoteTweetResultData = {
  entity_set: Entities
  /**
   * @pattern ^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$
   * @type string
   */
  id: string
  media?: NoteTweetResultMedia
  richtext?: NoteTweetResultRichText
  /**
   * @type string
   */
  text: string
}
export type NoteTweetResult = {
  result: NoteTweetResultData
}
export type NoteTweet = {
  /**
   * @type boolean
   */
  is_expandable: boolean
  note_tweet_results: NoteTweetResult
}
export type TweetQuotedRef = {
  /**
   * @type string
   */
  __typename: TypeName
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  rest_id: string
  [key: string]: any
}
export type QuotedRefResult = {
  result?: TweetQuotedRef
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type SuperFollowsReplyUserResultCore = {
  /**
   * @type string
   */
  screen_name: string
}
export type SuperFollowsReplyUserResultData = {
  /**
   * @type string
   */
  __typename: TypeName
  core: SuperFollowsReplyUserResultCore
}
export type SuperFollowsReplyUserResult = {
  result: SuperFollowsReplyUserResultData
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type TrendResults = {
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  rest_id: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type TweetCardLegacyBindingValueDataImage = {
  /**
   * @type string | undefined
   */
  alt?: string
  /**
   * @type integer
   */
  height: number
  /**
   * @type string, uri
   */
  url: string
  /**
   * @type integer
   */
  width: number
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type UserValue = {
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  id_str: string
}
export type TweetCardLegacyBindingValueData = {
  /**
   * @type boolean | undefined
   */
  boolean_value?: boolean
  /**
   * @type object | undefined
   */
  image_color_value?: {
    [key: string]: any
  }
  image_value?: TweetCardLegacyBindingValueDataImage
  /**
   * @type string | undefined
   */
  scribe_key?: string
  /**
   * @type string | undefined
   */
  string_value?: string
  /**
   * @type string
   */
  type: string
  user_value?: UserValue
}
export type TweetCardLegacyBindingValue = {
  /**
   * @type string
   */
  key: string
  value: TweetCardLegacyBindingValueData
}
declare const tweetCardPlatformAudienceNameEnum: {
  readonly production: 'production'
}
export type TweetCardPlatformAudienceNameEnum =
  (typeof tweetCardPlatformAudienceNameEnum)[keyof typeof tweetCardPlatformAudienceNameEnum]
export type TweetCardPlatformAudience = {
  /**
   * @type string
   */
  name: TweetCardPlatformAudienceNameEnum
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type TweetCardPlatformDevice = {
  /**
   * @type string
   */
  name: string
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  version: string
}
export type TweetCardPlatform = {
  audience: TweetCardPlatformAudience
  device: TweetCardPlatformDevice
}
export type TweetCardPlatformData = {
  platform: TweetCardPlatform
}
export type TweetCardLegacy = {
  /**
   * @type array
   */
  binding_values: TweetCardLegacyBindingValue[]
  card_platform?: TweetCardPlatformData
  /**
   * @type string
   */
  name: string
  /**
   * @type string
   */
  url: string
  /**
   * @type array | undefined
   */
  user_refs_results?: UserResults[]
}
export type TweetCard = {
  legacy?: TweetCardLegacy
  /**
   * @type string | undefined
   */
  rest_id?: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type TweetEditControlInitial = {
  /**
   * @type array
   */
  edit_tweet_ids: string[]
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  editable_until_msecs: string
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  edits_remaining: string
  /**
   * @type boolean
   */
  is_edit_eligible: boolean
}
export type TweetEditControl = {
  edit_control_initial?: TweetEditControlInitial
  /**
   * @type array | undefined
   */
  edit_tweet_ids?: string[]
  /**
   * @pattern ^[0-9]+$
   * @type string | undefined
   */
  editable_until_msecs?: string
  /**
   * @pattern ^[0-9]+$
   * @type string | undefined
   */
  edits_remaining?: string
  /**
   * @pattern ^[0-9]+$
   * @type string | undefined
   */
  initial_tweet_id?: string
  /**
   * @type boolean | undefined
   */
  is_edit_eligible?: boolean
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type TweetEditPrespective = {
  /**
   * @type boolean | undefined
   */
  favorited?: boolean
  /**
   * @type boolean | undefined
   */
  retweeted?: boolean
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type MediaStats = {
  /**
   * @type integer
   */
  viewCount: number
}
declare const mediaExtendedTypeEnum: {
  readonly photo: 'photo'
  readonly video: 'video'
  readonly animated_gif: 'animated_gif'
}
export type MediaExtendedTypeEnum = (typeof mediaExtendedTypeEnum)[keyof typeof mediaExtendedTypeEnum]
export type MediaExtended = {
  additional_media_info?: AdditionalMediaInfo
  allow_download_status?: AllowDownloadStatus
  /**
   * @type string
   */
  display_url: string
  /**
   * @type string, uri
   */
  expanded_url: string
  /**
   * @type string,null | undefined
   */
  ext_alt_text?: string | null
  ext_media_availability?: ExtMediaAvailability
  /**
   * @type object | undefined
   */
  features?: object
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  id_str: string
  /**
   * @type array
   */
  indices: number[]
  mediaStats?: MediaStats
  /**
   * @type string | undefined
   */
  media_key?: string
  media_results?: MediaResults
  /**
   * @type string, uri
   */
  media_url_https: string
  original_info: MediaOriginalInfo
  sensitive_media_warning?: SensitiveMediaWarning
  sizes: MediaSizes
  /**
   * @pattern ^[0-9]+$
   * @type string | undefined
   */
  source_status_id_str?: string
  /**
   * @pattern ^[0-9]+$
   * @type string | undefined
   */
  source_user_id_str?: string
  /**
   * @type string
   */
  type: MediaExtendedTypeEnum
  /**
   * @type string, uri
   */
  url: string
  video_info?: MediaVideoInfo
}
export type ExtendedEntities = {
  /**
   * @type array
   */
  media: MediaExtended[]
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type QuotedStatusPermalink = {
  /**
   * @type string
   */
  display: string
  /**
   * @type string, uri
   */
  expanded: string
  /**
   * @type string, uri
   */
  url: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type SelfThread = {
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  id_str: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type TweetLegacyScopes = {
  /**
   * @type boolean
   */
  followers: boolean
}
declare const tweetLegacyLimitedActionsEnum: {
  readonly limited_replies: 'limited_replies'
  readonly non_compliant: 'non_compliant'
  readonly dynamic_product_ad: 'dynamic_product_ad'
  readonly stale_tweet: 'stale_tweet'
  readonly community_tweet_non_member_public_community: 'community_tweet_non_member_public_community'
  readonly community_tweet_non_member_closed_community: 'community_tweet_non_member_closed_community'
  readonly blocked_viewer: 'blocked_viewer'
}
export type TweetLegacyLimitedActionsEnum =
  (typeof tweetLegacyLimitedActionsEnum)[keyof typeof tweetLegacyLimitedActionsEnum]
export type TweetLegacy = {
  /**
   * @type integer
   */
  bookmark_count: number
  /**
   * @type boolean
   */
  bookmarked: boolean
  conversation_control?: {
    [key: string]: any
  }
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  conversation_id_str: string
  /**
   * @type string
   */
  created_at: TwitterTimeFormat
  /**
   * @type array
   */
  display_text_range: number[]
  entities: Entities
  extended_entities?: ExtendedEntities
  /**
   * @type integer
   */
  favorite_count: number
  /**
   * @type boolean
   */
  favorited: boolean
  /**
   * @type string
   */
  full_text: string
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  id_str: string
  /**
   * @type string | undefined
   */
  in_reply_to_screen_name?: string
  /**
   * @pattern ^[0-9]+$
   * @type string | undefined
   */
  in_reply_to_status_id_str?: string
  /**
   * @pattern ^[0-9]+$
   * @type string | undefined
   */
  in_reply_to_user_id_str?: string
  /**
   * @type boolean
   */
  is_quote_status: boolean
  /**
   * @type string
   */
  lang: string
  /**
   * @type string | undefined
   */
  limited_actions?: TweetLegacyLimitedActionsEnum
  place?: {
    [key: string]: any
  }
  /**
   * @type boolean | undefined
   */
  possibly_sensitive?: boolean
  /**
   * @type boolean | undefined
   */
  possibly_sensitive_editable?: boolean
  /**
   * @type integer
   */
  quote_count: number
  /**
   * @pattern ^[0-9]+$
   * @type string | undefined
   */
  quoted_status_id_str?: string
  quoted_status_permalink?: QuotedStatusPermalink
  /**
   * @type integer
   */
  reply_count: number
  /**
   * @type integer
   */
  retweet_count: number
  /**
   * @type boolean
   */
  retweeted: boolean
  retweeted_status_result?: ItemResult
  scopes?: TweetLegacyScopes
  self_thread?: SelfThread
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  user_id_str: string
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type TweetPreviousCounts = {
  /**
   * @type integer
   */
  bookmark_count: number
  /**
   * @type integer
   */
  favorite_count: number
  /**
   * @type integer
   */
  quote_count: number
  /**
   * @type integer
   */
  reply_count: number
  /**
   * @type integer
   */
  retweet_count: number
}
declare const tweetViewStateEnum: {
  readonly Enabled: 'Enabled'
  readonly EnabledWithCount: 'EnabledWithCount'
}
export type TweetViewStateEnum = (typeof tweetViewStateEnum)[keyof typeof tweetViewStateEnum]
export type TweetView = {
  /**
   * @pattern ^[0-9]+$
   * @type string | undefined
   */
  count?: string
  /**
   * @type string
   */
  state: TweetViewStateEnum
}
declare const unifiedCardCardFetchStateEnum: {
  readonly NoCard: 'NoCard'
}
export type UnifiedCardCardFetchStateEnum =
  (typeof unifiedCardCardFetchStateEnum)[keyof typeof unifiedCardCardFetchStateEnum]
export type UnifiedCard = {
  /**
   * @type string
   */
  card_fetch_state: UnifiedCardCardFetchStateEnum
}
export type Tweet = {
  /**
   * @type string | undefined
   */
  __typename?: TypeName
  article?: Article
  author_community_relationship?: AuthorCommunityRelationship
  birdwatch_pivot?: BirdwatchPivot
  card?: TweetCard
  community_relationship?: CommunityRelationship
  community_results?: Community
  core: UserResultCore
  edit_control?: TweetEditControl
  edit_prespective?: TweetEditPrespective
  /**
   * @type boolean | undefined
   */
  grok_analysis_button?: boolean
  /**
   * @type array | undefined
   */
  grok_analysis_followups?: string[]
  grok_share_attachment?: GrokShareAttachment
  /**
   * @type boolean | undefined
   */
  has_birdwatch_notes?: boolean
  /**
   * @type boolean | undefined
   */
  is_translatable?: boolean
  legacy: TweetLegacy
  note_tweet?: NoteTweet
  previous_counts?: TweetPreviousCounts
  /**
   * @type object | undefined
   */
  quick_promote_eligibility?: object
  quotedRefResult?: QuotedRefResult
  quoted_status_result?: ItemResult
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  rest_id: string
  /**
   * @type string
   */
  source: string
  superFollowsReplyUserResult?: SuperFollowsReplyUserResult
  trend_results?: TrendResults
  unified_card?: UnifiedCard
  /**
   * @type object | undefined
   */
  unmention_data?: {
    [key: string]: any
  }
  views?: TweetView
}
declare const limitedActionResultsDataActionEnum: {
  readonly Reply: 'Reply'
  readonly Retweet: 'Retweet'
  readonly QuoteTweet: 'QuoteTweet'
  readonly Like: 'Like'
  readonly React: 'React'
  readonly AddToBookmarks: 'AddToBookmarks'
  readonly AddToMoment: 'AddToMoment'
  readonly PinToProfile: 'PinToProfile'
  readonly ViewHiddenReplies: 'ViewHiddenReplies'
  readonly VoteOnPoll: 'VoteOnPoll'
  readonly ShowRetweetActionMenu: 'ShowRetweetActionMenu'
  readonly ReplyDownVote: 'ReplyDownVote'
  readonly SendViaDm: 'SendViaDm'
  readonly ViewPostEngagements: 'ViewPostEngagements'
}
export type LimitedActionResultsDataActionEnum =
  (typeof limitedActionResultsDataActionEnum)[keyof typeof limitedActionResultsDataActionEnum]
export type LimitedActionResultsData = {
  /**
   * @type string
   */
  action: LimitedActionResultsDataActionEnum
}
export type TweetLimitedActionResults = {
  /**
   * @type array
   */
  limited_actions: LimitedActionResultsData[]
}
declare const tweetPreviewDisplayCtaUrlUrlTypeEnum: {
  readonly DeepLink: 'DeepLink'
  readonly UrtEndpoint: 'UrtEndpoint'
  readonly ExternalUrl: 'ExternalUrl'
}
export type TweetPreviewDisplayCtaUrlUrlTypeEnum =
  (typeof tweetPreviewDisplayCtaUrlUrlTypeEnum)[keyof typeof tweetPreviewDisplayCtaUrlUrlTypeEnum]
export type TweetPreviewDisplayCtaUrl = {
  /**
   * @type string, uri
   */
  url: string
  /**
   * @type string
   */
  urlType: TweetPreviewDisplayCtaUrlUrlTypeEnum
}
export type TweetPreviewDisplayCta = {
  /**
   * @type string
   */
  title: string
  url: TweetPreviewDisplayCtaUrl
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type TweetPreviewDisplayTweetViewCount = {
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  count: string
}
export type TweetPreviewDisplayTweet = {
  /**
   * @type integer
   */
  bookmark_count: number
  core: UserResultCore
  /**
   * @type string
   */
  created_at: TwitterTimeFormat
  /**
   * @type object
   */
  entities: object
  /**
   * @type integer
   */
  favorite_count: number
  /**
   * @type integer
   */
  quote_count: number
  /**
   * @type integer
   */
  reply_count: number
  /**
   * @pattern ^[0-9]+$
   * @type string
   */
  rest_id: string
  /**
   * @type integer
   */
  retweet_count: number
  /**
   * @type string
   */
  text: string
  view_count: TweetPreviewDisplayTweetViewCount
}
export type TweetPreviewDisplay = {
  /**
   * @type string
   */
  __typename: TypeName
  cta: TweetPreviewDisplayCta
  limited_action_results: TweetLimitedActionResults
  tweet: TweetPreviewDisplayTweet
}
export type TweetTombstone = {
  /**
   * @type string | undefined
   */
  __typename?: TypeName
  [key: string]: any
}
export type TweetUnavailable = {
  /**
   * @type string | undefined
   */
  __typename?: TypeName
  /**
   * @type string | undefined
   */
  reason?: string
}
declare const tweetInterstitialTextEntityRefTypeEnum: {
  readonly TimelineUrl: 'TimelineUrl'
}
export type TweetInterstitialTextEntityRefTypeEnum =
  (typeof tweetInterstitialTextEntityRefTypeEnum)[keyof typeof tweetInterstitialTextEntityRefTypeEnum]
declare const tweetInterstitialTextEntityRefUrlTypeEnum: {
  readonly ExternalUrl: 'ExternalUrl'
}
export type TweetInterstitialTextEntityRefUrlTypeEnum =
  (typeof tweetInterstitialTextEntityRefUrlTypeEnum)[keyof typeof tweetInterstitialTextEntityRefUrlTypeEnum]
export type TweetInterstitialTextEntityRef = {
  /**
   * @type string
   */
  type: TweetInterstitialTextEntityRefTypeEnum
  /**
   * @type string, uri
   */
  url: string
  /**
   * @type string
   */
  urlType: TweetInterstitialTextEntityRefUrlTypeEnum
}
export type TweetInterstitialTextEntity = {
  /**
   * @type integer
   */
  fromIndex: number
  ref: TweetInterstitialTextEntityRef
  /**
   * @type integer
   */
  toIndex: number
}
export type TweetInterstitialText = {
  /**
   * @type array
   */
  entities: TweetInterstitialTextEntity[]
  /**
   * @type boolean
   */
  rtl: boolean
  /**
   * @type string
   */
  text: string
}
export type MediaVisibilityResultsBlurredImageInterstitial = {
  /**
   * @type number
   */
  opacity: number
  text: TweetInterstitialText
  title: TweetInterstitialText
}
export type MediaVisibilityResults = {
  blurred_image_interstitial: MediaVisibilityResultsBlurredImageInterstitial
}
export type TweetInterstitialRevealText = {
  /**
   * @type array
   */
  entities: TweetInterstitialTextEntity[]
  /**
   * @type boolean
   */
  rtl: boolean
  /**
   * @type string
   */
  text: string
}
declare const tweetInterstitialDisplayTypeEnum: {
  readonly NonCompliant: 'NonCompliant'
}
export type TweetInterstitialDisplayTypeEnum =
  (typeof tweetInterstitialDisplayTypeEnum)[keyof typeof tweetInterstitialDisplayTypeEnum]
export type TweetInterstitial = {
  /**
   * @type string
   */
  __typename: TypeName
  /**
   * @type string
   */
  displayType: TweetInterstitialDisplayTypeEnum
  revealText: TweetInterstitialRevealText
  text: TweetInterstitialText
}
export type TweetWithVisibilityResults = {
  /**
   * @type string
   */
  __typename: TypeName
  /**
   * @type object | undefined
   */
  limitedActionResults?: {
    [key: string]: any
  }
  mediaVisibilityResults?: MediaVisibilityResults
  tweet: Tweet
  tweetInterstitial?: TweetInterstitial
}
export type TweetUnion =
  | (Tweet & {
      __typename: 'Tweet'
    })
  | (TweetWithVisibilityResults & {
      __typename: 'TweetWithVisibilityResults'
    })
  | (TweetTombstone & {
      __typename: 'TweetTombstone'
    })
  | (TweetUnavailable & {
      __typename: 'TweetUnavailable'
    })
  | (TweetPreviewDisplay & {
      __typename: 'TweetPreviewDisplay'
    })
  | (TweetQuotedRef & {
      __typename: 'TweetQuotedRef'
    })
export type ItemResult = {
  /**
   * @type string | undefined
   */
  __typename?: TypeName
  result?: TweetUnion
}
declare const timelineTweetTweetDisplayTypeEnum: {
  readonly Tweet: 'Tweet'
  readonly SelfThread: 'SelfThread'
  readonly MediaGrid: 'MediaGrid'
  readonly CondensedTweet: 'CondensedTweet'
}
export type TimelineTweetTweetDisplayTypeEnum =
  (typeof timelineTweetTweetDisplayTypeEnum)[keyof typeof timelineTweetTweetDisplayTypeEnum]
export type TimelineTweet = {
  /**
   * @type string
   */
  __typename: TypeName
  /**
   * @type boolean | undefined
   */
  hasModeratedReplies?: boolean
  /**
   * @type object | undefined
   */
  highlights?: Highlight$1
  /**
   * @type string
   */
  itemType: ContentItemType
  /**
   * @type object | undefined
   */
  promotedMetadata?: {
    [key: string]: any
  }
  socialContext?: SocialContextUnion
  /**
   * @type string
   */
  tweetDisplayType: TimelineTweetTweetDisplayTypeEnum
  tweet_results: ItemResult
}
export type ApiImage = {
  /**
   * @type string | undefined
   */
  __typename?: TypeName
  color_info?: ApiImageColorInfo
  /**
   * @type string, uri
   */
  original_img_url: string
  /**
   * @type integer
   */
  original_img_width: number
  /**
   * @type integer
   */
  original_img_height: number
  /**
   * @type object
   */
  salient_rect: {
    /**
     * @type number
     */
    left: number
    /**
     * @type number
     */
    top: number
    /**
     * @type number
     */
    width: number
    /**
     * @type number
     */
    height: number
  }
}
export type ApiMedia = {
  /**
   * @type string | undefined
   */
  id?: string
  /**
   * @type string | undefined
   */
  media_id?: string
  media_info?: ApiImage
  /**
   * @type string | undefined
   */
  __typename?: TypeName
}
export type TimelineTwitterListData = {
  /**
   * @description milliseconds
   * @type number
   */
  created_at: number
  custom_banner_media?: ApiMedia
  default_banner_media: ApiMedia
  /**
   * @type object | undefined
   */
  custom_banner_media_results?: {
    result: ApiMedia
  }
  /**
   * @type object
   */
  default_banner_media_results: {
    result: ApiMedia
  }
  /**
   * @type string
   */
  description: string
  /**
   * @type array
   */
  facepile_urls: string[]
  /**
   * @type string | undefined
   */
  followers_context?: string
  /**
   * @type boolean
   */
  following: boolean
  /**
   * @type string
   */
  id: string
  /**
   * @type string
   */
  id_str: string
  /**
   * @type boolean
   */
  is_member: boolean
  /**
   * @type number
   */
  member_count: number
  /**
   * @type string
   */
  members_context: string
  /**
   * @type string
   */
  mode: string
  /**
   * @type boolean
   */
  muting: boolean
  /**
   * @type string
   */
  name: string
  /**
   * @type boolean
   */
  pinning: boolean
  /**
   * @type number
   */
  subscriber_count: number
  user_results: UserResults
}
export type TimelineTwitterList = {
  list?: TimelineTwitterListData
  required?: any
}
declare const timelineUserUserDisplayTypeEnum: {
  readonly User: 'User'
  readonly UserDetailed: 'UserDetailed'
  readonly SubscribableUser: 'SubscribableUser'
  readonly UserConcise: 'UserConcise'
}
export type TimelineUserUserDisplayTypeEnum =
  (typeof timelineUserUserDisplayTypeEnum)[keyof typeof timelineUserUserDisplayTypeEnum]
export type TimelineUser = {
  /**
   * @type string
   */
  __typename: TypeName
  /**
   * @type string
   */
  itemType: ContentItemType
  socialContext?: SocialContextUnion
  /**
   * @type string
   */
  userDisplayType: TimelineUserUserDisplayTypeEnum
  user_results: UserResults
}
export type ItemContentUnion =
  | (TimelineTweet & {
      __typename: 'TimelineTweet'
    })
  | (TimelineTimelineCursor & {
      __typename: 'TimelineTimelineCursor'
    })
  | (TimelineUser & {
      __typename: 'TimelineUser'
    })
  | (TimelinePrompt & {
      __typename: 'TimelinePrompt'
    })
  | (TimelineMessagePrompt & {
      __typename: 'TimelineMessagePrompt'
    })
  | (TimelineCommunity & {
      __typename: 'TimelineCommunity'
    })
  | (TimelineTombstone & {
      __typename: 'TimelineTombstone'
    })
  | (TimelineTrend & {
      __typename: 'TimelineTrend'
    })
  | (TimelineNotification & {
      __typename: 'TimelineNotification'
    })
  | (TimelineTwitterList & {
      __typename: 'TimelineTwitterList'
    })
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
export type Tracing = {
  /**
   * @pattern ^[0-9a-f]{16}$
   * @type string
   */
  trace_id: string
}
export type ErrorExtensions = {
  /**
   * @type integer
   */
  code: number
  /**
   * @type string
   */
  kind: string
  /**
   * @type string
   */
  name: string
  /**
   * @type integer | undefined
   */
  retry_after?: number
  /**
   * @type string
   */
  source: string
  /**
   * @type object
   */
  tracing: Tracing
}
type Location$1 = {
  /**
   * @type integer
   */
  column: number
  /**
   * @type integer
   */
  line: number
}
export type ErrorResponse = {
  /**
   * @type integer
   */
  code: number
  /**
   * @type object
   */
  extensions: ErrorExtensions
  /**
   * @type string
   */
  kind: string
  /**
   * @type array
   */
  locations: Location$1[]
  /**
   * @type string
   */
  message: string
  /**
   * @type string
   */
  name: string
  /**
   * @type array
   */
  path: (string | number)[]
  /**
   * @type integer | undefined
   */
  retry_after?: number
  /**
   * @type string
   */
  source: string
  /**
   * @type object
   */
  tracing: Tracing
}
declare const variablesTimelineTypeEnum: {
  readonly All: 'All'
  readonly Verified: 'Verified'
  readonly Mentions: 'Mentions'
}
export type VariablesTimelineTypeEnum = (typeof variablesTimelineTypeEnum)[keyof typeof variablesTimelineTypeEnum]
export type ApiUtilsHeader = {
  raw: Headers
  connectionHash: string
  contentTypeOptions: string
  frameOptions: string
  rateLimitLimit: number
  rateLimitRemaining: number
  rateLimitReset: number
  responseTime: number
  tfePreserveBody: boolean
  transactionId: string
  twitterResponseTags: string
  xssProtection: number
}
declare function getUserByScreenName(screenName: string): Promise<User | null>
export interface NormalizedResponse<T> {
  data: T
  errors?: ErrorResponse[]
  headers: ApiUtilsHeader
}
export interface NormalizedPageResponse<T> extends NormalizedResponse<T> {
  cursor?: {
    top?: string
    bottom?: string
  }
}
export interface PageDataWithHeaders<T> extends NormalizedPageResponse<T[]> {}
declare function getUserTweets(options: {
  userId: string
  cursor?: string
  count?: number
}): Promise<PageDataWithHeaders<Tweet>>
declare function getUserTweetsAndReplies(options: {
  userId: string
  cursor?: string
  count?: number
}): Promise<PageDataWithHeaders<Tweet>>
declare function getLikes(options: {
  userId: string
  cursor?: string
  count?: number
}): Promise<PageDataWithHeaders<Tweet>>
declare function getNotificationsTimeline(options: {
  timeline_type: VariablesTimelineTypeEnum
  cursor?: string
  count?: number
}): Promise<NormalizedPageResponse<ItemContentUnion[]>>
export interface TwitterWebAPI {
  getUserByScreenName: typeof getUserByScreenName
  getUserTweets: typeof getUserTweets
  getUserTweetsAndReplies: typeof getUserTweetsAndReplies
  getLikes: typeof getLikes
  getNotificationsTimeline: typeof getNotificationsTimeline
}

export {}
